use cpu::CPU;

fn main() -> Result<(), String> {
    let mut bios = [0; 0x4000];
    let code = [
        0x01, 0x13, 0xA0, 0xE3, 0x01, 0x0B, 0xA0, 0xE3, 0x03, 0x00, 0x80, 0xE3, 0xB0, 0x00, 0xC1,
        0xE1, 0x1F, 0x00, 0xA0, 0xE3, 0x06, 0x14, 0xA0, 0xE3, 0x96, 0x1C, 0x81, 0xE2, 0x00, 0x20,
        0xA0, 0xE3, 0xB0, 0x00, 0xC1, 0xE1, 0x02, 0x10, 0x81, 0xE2, 0x01, 0x20, 0x82, 0xE2, 0xF0,
        0x00, 0x52, 0xE3, 0xFA, 0xFF, 0xFF, 0x1A, 0xFE, 0xFF, 0xFF, 0xEA, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00,
    ];

    bios[..code.len()].clone_from_slice(&code);

    let mut cpu = CPU::new();
    cpu.bios_rom.flash(bios);
    for _ in 0..20 {
        cpu.tick();
    }

    println!("r0: {:8x}", cpu.registers[0]);
    println!("r1: {:8x}", cpu.registers[1]);
    println!("r2: {:8x}", cpu.registers[2]);

    Ok(())
}
